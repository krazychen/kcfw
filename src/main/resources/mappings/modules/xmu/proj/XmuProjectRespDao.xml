<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.krazy.kcfw.modules.xmu.dao.proj.XmuProjectRespDao">
    
	<sql id="xmuProjectRespColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		'0' AS "delFlag",
		a.xpr_proj_id AS "xprProjId.id",
		a.xpr_office_id AS "xprOfficeId",
		a.xpr_office_name AS "xprOfficeName",
		a.xpr_user_id AS "xprUserId",
		a.xpr_user_name AS "xprUserName"
	</sql>
	
	<sql id="xmuProjectRespJoins">
		LEFT JOIN xmu_project b ON b.id = a.xpr_proj_id
		LEFT JOIN sys_office xprOfficeId ON xprOfficeId.id = a.xpr_office_id
		LEFT JOIN sys_user xprUserId ON xprUserId.id = a.xpr_user_id
	</sql>
	
    
	<select id="get" resultType="XmuProjectResp" >
		SELECT 
			<include refid="xmuProjectRespColumns"/>
		FROM xmu_project_resp a
		<include refid="xmuProjectRespJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="XmuProjectResp" >
		SELECT 
			<include refid="xmuProjectRespColumns"/>
		FROM xmu_project_resp a
		<include refid="xmuProjectRespJoins"/>
		<where>
			<!--a.del_flag = #{DEL_FLAG_NORMAL}-->
			<if test="xprProjId.id != null and xprProjId.id != ''">
				AND a.xpr_proj_id = #{xprProjId.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="XmuProjectResp" >
		SELECT 
			<include refid="xmuProjectRespColumns"/>
		FROM xmu_project_resp a
		<include refid="xmuProjectRespJoins"/>
		<where>
			<!--a.del_flag = #{DEL_FLAG_NORMAL}-->
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO xmu_project_resp(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			xpr_proj_id,
			xpr_office_id,
			xpr_office_name,
			xpr_user_id,
			xpr_user_name
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{xprProjId.id},
			#{xprOfficeId},
			#{xprOfficeName},
			#{xprUserId},
			#{xprUserName}
		)
	</insert>
	
	<update id="update">
		UPDATE xmu_project_resp SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			xpr_proj_id = #{xprProjId.id},
			xpr_office_id = #{xprOfficeId},
			xpr_office_name = #{xprOfficeName},
			xpr_user_id = #{xprUserId},
			xpr_user_name = #{xprUserName}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM xmu_project_resp
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE xpr_proj_id = #{xprProjId.id}
			</otherwise>
		</choose>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE xmu_project_resp SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE xpr_proj_id = #{xprProjIdid}
			</otherwise>
		</choose>
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="XmuProjectResp" statementType="STATEMENT">
		select * FROM xmu_project_resp  where ${propertyName} = '${value}'
	</select>
	
	
</mapper>