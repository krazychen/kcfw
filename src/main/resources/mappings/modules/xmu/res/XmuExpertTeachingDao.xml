<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.krazy.kcfw.modules.xmu.dao.res.XmuExpertTeachingDao">
    
	<sql id="xmuExpertTeachingColumns">
		a.xet_proj_name AS "xetProjName",
		a.xet_expret_office AS "xetExpretOffice",
		a.xet_expert_profession AS "xetExpertProfession",
		a.xet_expert_grade AS "xetExpertGrade",
		a.xet_expert_name AS "xetExpertName",
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.xet_proj_id AS "xetProjId",
		a.xet_expert_course_name AS "xetExpertCourseName",
		a.xet_expert_hours AS "xetExpertHours",
		a.xet_expert_area_id AS "xetExpertAreaId",
		a.xet_expert_area AS "xetExpertArea",
		a.xet_expert_unit AS "xetExpertUnit",
		a.xet_expert_job_title AS "xetExpertJobTitle",
		a.xet_expert_title AS "xetExpertTitle",
		a.xet_expret_office_id AS "xetExpretOfficeId"
	</sql>
	
	<sql id="xmuExpertTeachingJoins">
		LEFT JOIN sys_office xetExpretOffice ON xetExpretOffice.id = a.xet_expret_office
		LEFT JOIN sys_area xetExpertArea ON xetExpertArea.id = a.xet_expert_area
	</sql>
	
	<sql id="userJoins">
		JOIN sys_user u ON u.id = a.create_by
		JOIN sys_office o ON o.id = u.office_id
    </sql>
	
    
	<select id="get" resultType="XmuExpertTeaching" >
		SELECT 
			<include refid="xmuExpertTeachingColumns"/>
		FROM xmu_expert_teaching a
		<include refid="xmuExpertTeachingJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="XmuExpertTeaching" >
		SELECT 
			<include refid="xmuExpertTeachingColumns"/>
		FROM xmu_expert_teaching a
		<include refid="xmuExpertTeachingJoins"/>
		<include refid="userJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="xetProjName != null and xetProjName != ''">
				AND a.xet_proj_name = #{xetProjName}
			</if>
			<if test="xetExpretOffice != null and xetExpretOffice != ''">
				AND a.xet_expret_office = #{xetExpretOffice}
			</if>
			<if test="xetExpertProfession != null and xetExpertProfession != ''">
				AND a.xet_expert_profession = #{xetExpertProfession}
			</if>
			<if test="xetExpertGrade != null and xetExpertGrade != ''">
				AND a.xet_expert_grade = #{xetExpertGrade}
			</if>
			<if test="xetExpertName != null and xetExpertName != ''">
				AND a.xet_expert_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{xetExpertName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{xetExpertName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{xetExpertName},'%')</if>
			</if>
			<if test="xetExpertArea != null and xetExpertArea != ''">
				AND a.xet_expert_area = #{xetExpertArea}
			</if>
			<if test="xetExpertTitle != null and xetExpertTitle != ''">
				AND a.xet_expert_title = #{xetExpertTitle}
			</if>
		</where>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="XmuExpertTeaching" >
		SELECT 
			<include refid="xmuExpertTeachingColumns"/>
		FROM xmu_expert_teaching a
		<include refid="xmuExpertTeachingJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO xmu_expert_teaching(
			xet_proj_name,
			xet_expret_office,
			xet_expert_profession,
			xet_expert_grade,
			xet_expert_name,
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			xet_proj_id,
			xet_expert_course_name,
			xet_expert_hours,
			xet_expert_area_id,
			xet_expert_area,
			xet_expert_unit,
			xet_expert_job_title,
			xet_expert_title,
			xet_expret_office_id
		) VALUES (
			#{xetProjName},
			#{xetExpretOffice},
			#{xetExpertProfession},
			#{xetExpertGrade},
			#{xetExpertName},
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{xetProjId},
			#{xetExpertCourseName},
			#{xetExpertHours},
			#{xetExpertAreaId},
			#{xetExpertArea},
			#{xetExpertUnit},
			#{xetExpertJobTitle},
			#{xetExpertTitle},
			#{xetExpretOfficeId}
		)
	</insert>
	
	<update id="update">
		UPDATE xmu_expert_teaching SET 	
			xet_proj_name = #{xetProjName},
			xet_expret_office = #{xetExpretOffice},
			xet_expert_profession = #{xetExpertProfession},
			xet_expert_grade = #{xetExpertGrade},
			xet_expert_name = #{xetExpertName},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			xet_proj_id = #{xetProjId},
			xet_expert_course_name = #{xetExpertCourseName},
			xet_expert_hours = #{xetExpertHours},
			xet_expert_area_id = #{xetExpertAreaId},
			xet_expert_area = #{xetExpertArea},
			xet_expert_unit = #{xetExpertUnit},
			xet_expert_job_title = #{xetExpertJobTitle},
			xet_expert_title = #{xetExpertTitle},
			xet_expret_office_id = #{xetExpretOfficeId}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM xmu_expert_teaching
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE xmu_expert_teaching SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="XmuExpertTeaching" statementType="STATEMENT">
		select * FROM xmu_expert_teaching  where ${propertyName} = '${value}'
	</select>
	
	
</mapper>